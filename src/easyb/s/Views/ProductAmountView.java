/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package easyb.s.Views;

import com.sun.glass.events.KeyEvent;
import easyb.s.Global;
import easyb.s.Product.NewProduct;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Steve
 */
public class ProductAmountView extends javax.swing.JFrame {

    /**
     * Creates new form ProductAmountView
     */
    public ProductAmountView() {
        initComponents();
        blockTextField();
        showInformation();
        this.chooseProductAmountTextField.requestFocus();
        
    }

    //This method blocks the textfield calls productNameTextField and 
    //productAmountTextField with the intention that the user does not 
    //modify the information that is in them.
    public void blockTextField(){
    
        productNameTextField.setEditable(false);
        productAmountTextField.setEditable(false);
        
    }
    
    //This method shows information in the text fields. The information shown 
    //is the name of the product to be purchased and the total amount that is available for sale.
    public void showInformation(){
        
        productNameTextField.setText(Global.productName);
        productAmountTextField.setText(Integer.toString(Global.productAmount));
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productNameTextField = new javax.swing.JTextField();
        productAmountTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chooseProductAmountTextField = new javax.swing.JTextField();
        addProductButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Product Name");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Product Amount");

        productNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameTextFieldActionPerformed(evt);
            }
        });

        productAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productAmountTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Choose the desired amount of product:");

        chooseProductAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseProductAmountTextFieldActionPerformed(evt);
            }
        });
        chooseProductAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chooseProductAmountTextFieldKeyPressed(evt);
            }
        });

        addProductButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addProductButton.setText("Add Product");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(108, 108, 108))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(productNameTextField)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productAmountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chooseProductAmountTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addProductButton)
                .addGap(158, 158, 158))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(chooseProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(addProductButton)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void productNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameTextFieldActionPerformed
        // TODO add your handling code here:
           
    }//GEN-LAST:event_productNameTextFieldActionPerformed

    private void productAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productAmountTextFieldActionPerformed
        // TODO add your handling code here:
  
    }//GEN-LAST:event_productAmountTextFieldActionPerformed

    private void chooseProductAmountTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chooseProductAmountTextFieldKeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            this.addProductButton.requestFocus();
            
        }
        
    }//GEN-LAST:event_chooseProductAmountTextFieldKeyPressed

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        
        //This button add the product and the amount that the user wants to buy to the wish list.
        if (chooseProductAmountTextField.getText().equals("")){
            
            JOptionPane.showMessageDialog(this, "You must choose a PRODUCT AMOUNT",
                    "Product quantity problem", JOptionPane.ERROR_MESSAGE);
            this.chooseProductAmountTextField.requestFocus();
            return;
            
        }
        
        int productAmount = Integer.parseInt(chooseProductAmountTextField.getText());
        
        if (Global.actionBuyer == 0){
            
            if (productAmount <= Global.productAmount){
            
                DefaultTableModel model = (DefaultTableModel) BuyerView.wishListTable.getModel();

                Object rowDate[] = new Object[6];


                    rowDate[0] = Global.productId;
                    rowDate[1] = Global.productName;
                    rowDate[2] = productAmount;
                    rowDate[3] = productAmount * Global.productPrice;
                    rowDate[4] = Global.productCondition;
                    rowDate[5] = Global.emailSeller;
                    model.insertRow(model.getRowCount(), rowDate);

                    System.out.println("Product ID: " + Global.productId + "\n" + "Product Name: "+ Global.productName + "\n" + 
                        "Product Amount: " + productAmount + "\n" + "Total Price: " + (Global.productPrice * productAmount) + "\n" + 
                        "Product Condition: " + Global.productCondition + "\n" + "Email Seller: " + Global.emailSeller + "\n" + "**** *** ** * | * ** *** ****");
                    
            } 
            
            else{
                    
                    JOptionPane.showMessageDialog(this, "You must choose a quantity of "
                            + "product less than or equal to that shown in QUANTITY AVAILABLE",
                    "Product quantity problem", JOptionPane.ERROR_MESSAGE);
                    this.chooseProductAmountTextField.requestFocus();
                    return;
            
                }            
                    
        } 
        
        else{
        
            for (NewProduct getInfo : Global.productList){
                
                String idProduct = getInfo.getId();
                String emailSeller = getInfo.getEmailSeller();
                int amount = getInfo.getAmount();
            
                if (idProduct.equals(Global.productId) && emailSeller.equals(Global.emailSeller)){
                    
                    if (productAmount <= amount){
                        
                        BuyerView.wishListTable.setValueAt(productAmount, Global.rowPurchasesListTable, 2);
                        BuyerView.wishListTable.setValueAt(productAmount * Global.productPrice, Global.rowPurchasesListTable, 3);

                    }
                    else{
                        
                        JOptionPane.showMessageDialog(this, "You must choose a quantity of "
                        + "product less than or equal to that shown in QUANTITY AVAILABLE",
                        "Product quantity problem", JOptionPane.ERROR_MESSAGE);
                        this.chooseProductAmountTextField.requestFocus();
                        return;
                        
                    }
                    
                    
                }

            }
    
        }
           
        this.dispose();
        
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void chooseProductAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProductAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseProductAmountTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductAmountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductAmountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductAmountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductAmountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductAmountView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductButton;
    private javax.swing.JTextField chooseProductAmountTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField productAmountTextField;
    private javax.swing.JTextField productNameTextField;
    // End of variables declaration//GEN-END:variables
}
